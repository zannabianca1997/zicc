descr: Test the call stack with a factorial function
tests:
    zero:
        in: [0]
        out: [1]
    one:
        in: [1]
        out: [1]
    four:
        in: [4]
        out: [24]
---

factorial:
    /*
        Stack now:
            -2: input parameter
            -1: return address
    */

    jnz @-2 #recurse
        // 0! case
        mov #1 @-2
    ret 

    recurse:
    add @-2 #-1 @0
    call #factorial, 1
    mul @0 @-2 @-2
    ret


entry main
main:
    /*
        Local variables:
            0 => input
    */
    in @0
    // call factorial with a single argument, input.
    // the argument is already in place (@0 -> incb -> @-2)
    call #factorial, 1
    // out the top of the stack
    out @0
    ret

